From 18347c286f6434ac5e7b7feddabff16cc8fb46c2 Mon Sep 17 00:00:00 2001
From: l00905966 <l00905966@notesmail.huawei.com/>
Date: Tue, 10 Jun 2025 17:37:19 +0800
Subject: [PATCH] =?UTF-8?q?TicketNo:=20Description:d.ts=E8=B5=84=E6=96=99?=
 =?UTF-8?q?=E5=90=8C=E6=AD=A5=20Team:=20Feature=20or=20Bugfix:=20Binary=20?=
 =?UTF-8?q?Source:=20PrivateCode(Yes/No):?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I80c1d87b8290c7b6265dc59da759d755dc864dc3
---
 api/@ohos.multimedia.camera.d.ts | 207 +++++++++++++++++++++++++------
 1 file changed, 168 insertions(+), 39 deletions(-)

diff --git a/api/@ohos.multimedia.camera.d.ts b/api/@ohos.multimedia.camera.d.ts
index 55ffd9207d..3bed583ede 100644
--- a/api/@ohos.multimedia.camera.d.ts
+++ b/api/@ohos.multimedia.camera.d.ts
@@ -833,7 +833,8 @@ declare namespace camera {
     /**
      * Gets supported scene mode for specific camera.
      *
-     * @param { CameraDevice } camera - Camera device.
+     * @param { CameraDevice } camera - The camera device, obtained through the getSupportedCameras interface.
+     * An error code will be returned in case of a parameter passing exception.
      * @returns { Array<SceneMode> } An array of supported scene mode of camera.
      * @syscap SystemCapability.Multimedia.Camera.Core
      * @atomicservice
@@ -853,8 +854,8 @@ declare namespace camera {
     /**
      * Gets supported output capability for specific camera.
      *
-     * @param { CameraDevice } camera - Camera device.
-     * @param { SceneMode } mode - Scene mode.
+     * @param { CameraDevice } camera - Camera device, obtained via the getSupportedCameras interface.
+     * @param { SceneMode } mode - Scene mode, obtained via the getSupportedSceneModes interface.
      * @returns { CameraOutputCapability } The camera output capability.
      * @syscap SystemCapability.Multimedia.Camera.Core
      * @atomicservice
@@ -1026,7 +1027,8 @@ declare namespace camera {
     /**
      * Creates a PreviewOutput instance.
      *
-     * @param { Profile } profile - Preview output profile.
+     * @param { Profile } profile - Supported preview configuration information,
+     * obtained through the getSupportedOutputCapability interface.
      * @param { string } surfaceId - Surface object id used in camera photo output.
      * @returns { PreviewOutput } The PreviewOutput instance.
      * @throws { BusinessError } 7400101 - Parameter missing or parameter type incorrect.
@@ -1110,7 +1112,9 @@ declare namespace camera {
      * You can use this method to create a photo output instance without a profile, This instance can
      * only be used in a preconfiged session.
      *
-     * @param { Profile } profile - Photo output profile.
+     * @param { Profile } profile - Supported photo configuration information, obtained through the getSupportedOutputCapability interface.
+     * This parameter is required for API 11; starting from API version 12, if preconfig is used for preconfiguration,
+     * passing in the profile parameter will override the preconfig preconfiguration parameters.
      * @returns { PhotoOutput } The PhotoOutput instance.
      * @throws { BusinessError } 7400101 - Parameter missing or parameter type incorrect.
      * @throws { BusinessError } 7400201 - Camera service fatal error.
@@ -1144,7 +1148,8 @@ declare namespace camera {
     /**
      * Creates a VideoOutput instance.
      *
-     * @param { VideoProfile } profile - Video profile.
+     * @param { VideoProfile } profile - Supported recording configuration information,
+     * obtained through the getSupportedOutputCapability interface.
      * @param { string } surfaceId - Surface object id used in camera video output.
      * @returns { VideoOutput } The VideoOutput instance.
      * @throws { BusinessError } 7400101 - Parameter missing or parameter type incorrect.
@@ -1204,7 +1209,8 @@ declare namespace camera {
     /**
      * Creates a MetadataOutput instance.
      *
-     * @param { Array<MetadataObjectType> } metadataObjectTypes - Array of MetadataObjectType.
+     * @param { Array<MetadataObjectType> } metadataObjectTypes - metadata stream type information,
+     * obtained through the getSupportedOutputCapability interface.
      * @returns { MetadataOutput } The MetadataOutput instance.
      * @throws { BusinessError } 7400101 - Parameter missing or parameter type incorrect.
      * @throws { BusinessError } 7400201 - Camera service fatal error.
@@ -1321,7 +1327,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes camera status change event callback.
+     * Camera state callback to get the state change of the camera by registering the callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'cameraStatus' } type - Event type.
      * @param { AsyncCallback<CameraStatusInfo> } callback - Callback used to get the camera status change.
@@ -1359,7 +1369,10 @@ declare namespace camera {
      * @since 12
      */
     /**
-     * Subscribes fold status change event callback.
+     * Registers a listener for folding device fold state changes. Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout
+     * callback in the callback method of the on listener.
      *
      * @param { 'foldStatusChanged' } type - Event type.
      * @param { AsyncCallback<FoldStatusInfo> } callback - Callback used to get the fold status change.
@@ -1651,7 +1664,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes torch status change event callback.
+     * Flashlight state change callback to get flashlight state change by registering callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout
+     * callback in the callback method of the on listener.
      *
      * @param { 'torchStatusChange' } type - Event type
      * @param { AsyncCallback<TorchStatusInfo> } callback - Callback used to return the torch status change
@@ -2705,7 +2722,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes to error events.
+     * Listen to CameraInput's error event and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off
+     * logout callback in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { CameraDevice } camera - Camera device.
@@ -7448,7 +7469,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes to error events.
+     * Listen for error events for normal photo sessions and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the capture session errors.
@@ -7486,7 +7511,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes focus state change event callback.
+     * Listen for state changes in camera focus and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'focusStateChange' } type - Event type.
      * @param { AsyncCallback<FocusState> } callback - Callback used to get the focus state change.
@@ -7524,7 +7553,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes zoom info event callback.
+     * Listen for state changes in the camera's smooth zoom and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'smoothZoomInfoAvailable' } type - Event type.
      * @param { AsyncCallback<SmoothZoomInfo> } callback - Callback used to get the zoom info.
@@ -7634,7 +7667,11 @@ declare namespace camera {
      * @since 13
      */
     /**
-     * Subscribes to auto device switch status event callback.
+     * Listen to the camera automatically switching lens state changes, get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'autoDeviceSwitchStatusChange' } type - Event type.
      * @param { AsyncCallback<AutoDeviceSwitchStatus> } callback - Callback used to return the result.
@@ -7876,7 +7913,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes to error events.
+     * Listens for error events from a normal video session and gets the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the capture session errors.
@@ -7914,7 +7955,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes focus state change event callback.
+     * Listen for state changes in camera focus and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'focusStateChange' } type - Event type.
      * @param { AsyncCallback<FocusState> } callback - Callback used to get the focus state change.
@@ -7952,7 +7997,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes zoom info event callback.
+     * Listen for state changes in the camera's smooth zoom and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'smoothZoomInfoAvailable' } type - Event type.
      * @param { AsyncCallback<SmoothZoomInfo> } callback - Callback used to get the zoom info.
@@ -8038,7 +8087,11 @@ declare namespace camera {
      * @since 13
      */
     /**
-     * Subscribes to auto device switch status event callback.
+     * Listen to the camera automatically switching lens state changes, get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'autoDeviceSwitchStatusChange' } type - Event type.
      * @param { AsyncCallback<AutoDeviceSwitchStatus> } callback - Callback used to return the result.
@@ -9915,7 +9968,11 @@ declare namespace camera {
      * @since 12
      */
     /**
-     * Subscribes to error events.
+     * Listen for error events on security camera sessions and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the capture session errors.
@@ -9953,7 +10010,11 @@ declare namespace camera {
      * @since 12
      */
     /**
-     * Subscribes focus status change event callback.
+     * Listen for state changes in camera focus and get the results by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'focusStateChange' } type - Event type.
      * @param { AsyncCallback<FocusState> } callback - Callback used to get the focus state change.
@@ -10559,7 +10620,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes frame start event callback.
+     * Listen for the preview frame to start and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface doesn't support calling the off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'frameStart' } type - Event type.
      * @param { AsyncCallback<void> } callback - Callback used to return the result.
@@ -10597,7 +10662,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes frame end event callback.
+     * Listen for the end of the preview frame and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'frameEnd' } type - Event type.
      * @param { AsyncCallback<void> } callback - Callback used to return the result.
@@ -10635,7 +10704,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes to error events.
+     * Listen for error events on the preview output and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the preview output errors.
@@ -11275,7 +11348,8 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Set the mirror photo function switch, default to false.
+     * Mirror enable switch (default off).
+     * You need to use isMirrorSupported to determine if it is supported before using it.
      *
      * @type { ?boolean }
      * @syscap SystemCapability.Multimedia.Camera.Core
@@ -11767,7 +11841,10 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes photo available event callback.
+     * Register to listen for full quality chart uploads. Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'photoAvailable' } type - Event type.
      * @param { AsyncCallback<Photo> } callback - Callback used to get the Photo.
@@ -11833,7 +11910,10 @@ declare namespace camera {
      * @since 12
      */
     /**
-     * Subscribes to photo asset event callback.
+     * Registers to listen for photoAsset uploads. Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * <p>This API processes deferred photo delivery data by quickly displaying low-quality images to give
      * users the impression of faster photo capture, while also generating high-quality images to maintain the
@@ -11894,7 +11974,10 @@ declare namespace camera {
      * @since 13
      */
     /**
-     * Enable mirror for photo capture.
+     * Whether to enable moving photo mirroring.
+     * 
+     * Before calling this interface, you need to query whether dynamic photo taking function is supported
+     * by isMovingPhotoSupported and whether mirror photo taking function is supported by isMirrorSupported.
      *
      * @param { boolean } enabled - enable photo mirror if TRUE.
      * @throws { BusinessError } 7400101 - Parameter missing or parameter type incorrect.
@@ -11939,7 +12022,11 @@ declare namespace camera {
      * @since 11
      */
     /**
-     * Subscribes capture start event callback.
+     * Listen for the start of the photo taking, get the CaptureStartInfo by registering the callback function.
+     * use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'captureStartWithInfo' } type - Event type.
      * @param { AsyncCallback<CaptureStartInfo> } callback - Callback used to get the capture start info.
@@ -12007,7 +12094,11 @@ declare namespace camera {
     off(type: 'frameShutter', callback?: AsyncCallback<FrameShutterInfo>): void;
 
     /**
-     * Subscribes frame shutter end event callback.
+     * Listen for the end of photo exposure capture and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'frameShutterEnd' } type - Event type.
      * @param { AsyncCallback<FrameShutterEndInfo> } callback - Callback used to get the frame shutter end information.
@@ -12053,7 +12144,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes capture end event callback.
+     * Listen for the end of the photo shoot and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling off logout callback
+     * in the callback method of on listener.
      *
      * @param { 'captureEnd' } type - Event type.
      * @param { AsyncCallback<CaptureEndInfo> } callback - Callback used to get the capture end information.
@@ -12091,7 +12186,11 @@ declare namespace camera {
      * @since 12
      */
     /**
-     * Subscribes capture ready event callback. After receiving the callback, can proceed to the next capture
+     * Listen for the next available shot and get the result by registering the callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'captureReady' } type - Event type.
      * @param { AsyncCallback<void> } callback - Callback used to notice capture ready.
@@ -12129,7 +12228,11 @@ declare namespace camera {
      * @since 12
      */
     /**
-     * Subscribes estimated capture duration event callback.
+     * Listen for the estimated time to take a picture and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'estimatedCaptureDuration' } type - Event type.
      * @param { AsyncCallback<number> } callback - Callback used to notify the estimated capture duration (in milliseconds).
@@ -12167,7 +12270,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes to error events.
+     * Listen for an error in the photo output and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the photo output errors.
@@ -12817,7 +12924,13 @@ declare namespace camera {
      * @since 15
      */
     /**
-     * Enable mirror for video capture.
+     * Enable/disable mirror recording.
+     * 
+     * Before calling this interface, you need to query whether to support video mirroring
+     * function by isMirrorSupported.
+     * 
+     * After enabling/disabling the video mirroring, you need to update the rotation by
+     * getVideoRotation and updateRotation.
      *
      * @param { boolean } enabled - enable video mirror if TRUE.
      * @throws { BusinessError } 7400101 - Parameter missing or parameter type incorrect.
@@ -13035,8 +13148,12 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes frame start event callback.
+     * Listen for the start of the video recording and get the result by registering a callback function.
+     * Use callback asynchronous callback.
      *
+     * Description:The current registration listening interface does not support calling the off logout callback
+     * in the callback method of on listening.
+     * 
      * @param { 'frameStart' } type - Event type.
      * @param { AsyncCallback<void> } callback - Callback used to return the result.
      * @syscap SystemCapability.Multimedia.Camera.Core
@@ -13111,7 +13228,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes to error events.
+     * Listen for an error in the video output and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registered listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the video output errors.
@@ -13940,7 +14061,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes to metadata objects available event callback.
+     * Listen to the detected metadata object and get the result by registering the callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'metadataObjectsAvailable' } type - Event type.
      * @param { AsyncCallback<Array<MetadataObject>> } callback - Callback used to get the available metadata objects.
@@ -13978,7 +14103,11 @@ declare namespace camera {
      * @since 10
      */
     /**
-     * Subscribes to error events.
+     * Listen for errors in the metadata stream and get the result by registering a callback function.
+     * Use callback asynchronous callback.
+     * 
+     * Description:The current registration listener interface does not support calling the off logout callback
+     * in the callback method of the on listener.
      *
      * @param { 'error' } type - Event type.
      * @param { ErrorCallback } callback - Callback used to get the video output errors.
-- 
2.45.2.huawei.8

